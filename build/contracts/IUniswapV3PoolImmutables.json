{
  "contractName": "IUniswapV3PoolImmutables",
  "abi": [
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLiquidityPerTick",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/rahulbane/BlockchainProjects/RouterProtocol/UniswapFork/Uniswap-Core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/rahulbane/BlockchainProjects/RouterProtocol/UniswapFork/Uniswap-Core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n",
  "sourcePath": "/home/rahulbane/BlockchainProjects/RouterProtocol/UniswapFork/Uniswap-Core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
  "ast": {
    "absolutePath": "/home/rahulbane/BlockchainProjects/RouterProtocol/UniswapFork/Uniswap-Core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
    "exportedSymbols": {
      "IUniswapV3PoolImmutables": [
        3464
      ]
    },
    "id": 3465,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3426,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:17"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3427,
          "nodeType": "StructuredDocumentation",
          "src": "71:153:17",
          "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
        },
        "fullyImplemented": false,
        "id": 3464,
        "linearizedBaseContracts": [
          3464
        ],
        "name": "IUniswapV3PoolImmutables",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 3428,
              "nodeType": "StructuredDocumentation",
              "src": "265:138:17",
              "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
            },
            "functionSelector": "c45a0155",
            "id": 3433,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "factory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:2:17"
            },
            "returnParameters": {
              "id": 3432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3431,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "450:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "449:9:17"
            },
            "scope": 3464,
            "src": "408:51:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3434,
              "nodeType": "StructuredDocumentation",
              "src": "465:113:17",
              "text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
            },
            "functionSelector": "0dfe1681",
            "id": 3439,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "token0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:2:17"
            },
            "returnParameters": {
              "id": 3438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3437,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "624:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:9:17"
            },
            "scope": 3464,
            "src": "583:50:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3440,
              "nodeType": "StructuredDocumentation",
              "src": "639:114:17",
              "text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
            },
            "functionSelector": "d21220a7",
            "id": 3445,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "token1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "773:2:17"
            },
            "returnParameters": {
              "id": 3444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3443,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3445,
                  "src": "799:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "798:9:17"
            },
            "scope": 3464,
            "src": "758:50:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3446,
              "nodeType": "StructuredDocumentation",
              "src": "814:84:17",
              "text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
            },
            "functionSelector": "ddca3f43",
            "id": 3451,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:2:17"
            },
            "returnParameters": {
              "id": 3450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3449,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "941:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 3448,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:8:17"
            },
            "scope": 3464,
            "src": "903:46:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3452,
              "nodeType": "StructuredDocumentation",
              "src": "955:358:17",
              "text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
            },
            "functionSelector": "d0c93a7c",
            "id": 3457,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tickSpacing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1338:2:17"
            },
            "returnParameters": {
              "id": 3456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3455,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "1364:5:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 3454,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1363:7:17"
            },
            "scope": 3464,
            "src": "1318:53:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3458,
              "nodeType": "StructuredDocumentation",
              "src": "1377:363:17",
              "text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
            },
            "functionSelector": "70cf754a",
            "id": 3463,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxLiquidityPerTick",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:2:17"
            },
            "returnParameters": {
              "id": 3462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3463,
                  "src": "1799:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1798:9:17"
            },
            "scope": 3464,
            "src": "1745:63:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3465,
        "src": "224:1586:17"
      }
    ],
    "src": "45:1766:17"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/rahulbane/BlockchainProjects/RouterProtocol/UniswapFork/Uniswap-Core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
      "exportedSymbols": {
        "IUniswapV3PoolImmutables": [
          3464
        ]
      },
      "license": "GPL-2.0-or-later"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0"
          ]
        },
        "id": 3426,
        "name": "PragmaDirective",
        "src": "45:24:17"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            3464
          ],
          "name": "IUniswapV3PoolImmutables",
          "scope": 3465
        },
        "children": [
          {
            "attributes": {
              "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
            },
            "id": 3427,
            "name": "StructuredDocumentation",
            "src": "71:153:17"
          },
          {
            "attributes": {
              "functionSelector": "c45a0155",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "factory",
              "scope": 3464,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                },
                "id": 3428,
                "name": "StructuredDocumentation",
                "src": "265:138:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3429,
                "name": "ParameterList",
                "src": "424:2:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3433,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3430,
                        "name": "ElementaryTypeName",
                        "src": "450:7:17"
                      }
                    ],
                    "id": 3431,
                    "name": "VariableDeclaration",
                    "src": "450:7:17"
                  }
                ],
                "id": 3432,
                "name": "ParameterList",
                "src": "449:9:17"
              }
            ],
            "id": 3433,
            "name": "FunctionDefinition",
            "src": "408:51:17"
          },
          {
            "attributes": {
              "functionSelector": "0dfe1681",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "token0",
              "scope": 3464,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
                },
                "id": 3434,
                "name": "StructuredDocumentation",
                "src": "465:113:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3435,
                "name": "ParameterList",
                "src": "598:2:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3439,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3436,
                        "name": "ElementaryTypeName",
                        "src": "624:7:17"
                      }
                    ],
                    "id": 3437,
                    "name": "VariableDeclaration",
                    "src": "624:7:17"
                  }
                ],
                "id": 3438,
                "name": "ParameterList",
                "src": "623:9:17"
              }
            ],
            "id": 3439,
            "name": "FunctionDefinition",
            "src": "583:50:17"
          },
          {
            "attributes": {
              "functionSelector": "d21220a7",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "token1",
              "scope": 3464,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
                },
                "id": 3440,
                "name": "StructuredDocumentation",
                "src": "639:114:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3441,
                "name": "ParameterList",
                "src": "773:2:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3445,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3442,
                        "name": "ElementaryTypeName",
                        "src": "799:7:17"
                      }
                    ],
                    "id": 3443,
                    "name": "VariableDeclaration",
                    "src": "799:7:17"
                  }
                ],
                "id": 3444,
                "name": "ParameterList",
                "src": "798:9:17"
              }
            ],
            "id": 3445,
            "name": "FunctionDefinition",
            "src": "758:50:17"
          },
          {
            "attributes": {
              "functionSelector": "ddca3f43",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "fee",
              "scope": 3464,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
                },
                "id": 3446,
                "name": "StructuredDocumentation",
                "src": "814:84:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3447,
                "name": "ParameterList",
                "src": "915:2:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3451,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint24",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint24",
                          "type": "uint24"
                        },
                        "id": 3448,
                        "name": "ElementaryTypeName",
                        "src": "941:6:17"
                      }
                    ],
                    "id": 3449,
                    "name": "VariableDeclaration",
                    "src": "941:6:17"
                  }
                ],
                "id": 3450,
                "name": "ParameterList",
                "src": "940:8:17"
              }
            ],
            "id": 3451,
            "name": "FunctionDefinition",
            "src": "903:46:17"
          },
          {
            "attributes": {
              "functionSelector": "d0c93a7c",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "tickSpacing",
              "scope": 3464,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
                },
                "id": 3452,
                "name": "StructuredDocumentation",
                "src": "955:358:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3453,
                "name": "ParameterList",
                "src": "1338:2:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "int24",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "int24",
                          "type": "int24"
                        },
                        "id": 3454,
                        "name": "ElementaryTypeName",
                        "src": "1364:5:17"
                      }
                    ],
                    "id": 3455,
                    "name": "VariableDeclaration",
                    "src": "1364:5:17"
                  }
                ],
                "id": 3456,
                "name": "ParameterList",
                "src": "1363:7:17"
              }
            ],
            "id": 3457,
            "name": "FunctionDefinition",
            "src": "1318:53:17"
          },
          {
            "attributes": {
              "functionSelector": "70cf754a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "maxLiquidityPerTick",
              "scope": 3464,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
                },
                "id": 3458,
                "name": "StructuredDocumentation",
                "src": "1377:363:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3459,
                "name": "ParameterList",
                "src": "1773:2:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3463,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint128",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint128",
                          "type": "uint128"
                        },
                        "id": 3460,
                        "name": "ElementaryTypeName",
                        "src": "1799:7:17"
                      }
                    ],
                    "id": 3461,
                    "name": "VariableDeclaration",
                    "src": "1799:7:17"
                  }
                ],
                "id": 3462,
                "name": "ParameterList",
                "src": "1798:9:17"
              }
            ],
            "id": 3463,
            "name": "FunctionDefinition",
            "src": "1745:63:17"
          }
        ],
        "id": 3464,
        "name": "ContractDefinition",
        "src": "224:1586:17"
      }
    ],
    "id": 3465,
    "name": "SourceUnit",
    "src": "45:1766:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-20T17:59:53.106Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "factory()": {
        "returns": {
          "_0": "The contract address"
        }
      },
      "fee()": {
        "returns": {
          "_0": "The fee"
        }
      },
      "maxLiquidityPerTick()": {
        "details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
        "returns": {
          "_0": "The max amount of liquidity per tick"
        }
      },
      "tickSpacing()": {
        "details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
        "returns": {
          "_0": "The tick spacing"
        }
      },
      "token0()": {
        "returns": {
          "_0": "The token contract address"
        }
      },
      "token1()": {
        "returns": {
          "_0": "The token contract address"
        }
      }
    },
    "title": "Pool state that never changes",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "factory()": {
        "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
      },
      "fee()": {
        "notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
      },
      "maxLiquidityPerTick()": {
        "notice": "The maximum amount of position liquidity that can use any tick in the range"
      },
      "tickSpacing()": {
        "notice": "The pool tick spacing"
      },
      "token0()": {
        "notice": "The first of the two tokens of the pool, sorted by address"
      },
      "token1()": {
        "notice": "The second of the two tokens of the pool, sorted by address"
      }
    },
    "notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
    "version": 1
  }
}